/* Grid */

@numcols: 8;
@gutter: 0.5; //Gutter is foo x 1col
@pagewidth: 480;

@marginfixedeq: (1 - 1/(@gutter+1))*(@pagewidth/@numcols)/2;
@marginfluideq: (1 - 1/(@gutter+1))*(100/@numcols)/2;

/* For easier access */

@marginfixed: ~"@{marginfixedeq}px";
@marginfluid: ~"@{marginfluideq}%";

.gridfixed() {
	margin-left: ~"-@{marginfixedeq}px";
	margin-right: ~"-@{marginfixedeq}px";
	.clearfix;
}

.gridfluid() {
	margin-left: ~"-@{marginfluideq}%";
	margin-right: ~"-@{marginfluideq}%";
	.clearfix;
}

/* 	How many columns do you want to span?
*/

.spanfixed(@x) {
	@colwidth: (@pagewidth/@numcols)*@x - @marginfixedeq * 2;
	width: ~"@{colwidth}px";
	margin: @marginfixed;
	float: left;
}

.spanfluid(@x) {
	@colwidth: (100/@numcols)*@x - @marginfluideq * 2;
	width: ~"@{colwidth}%";
	margin: @marginfluid;
	float: left;
}

/* Do you want to offset by x columns? */

.offsetfixed(@x) {
	@offset: (@pagewidth/@numcols)*@x + @marginfixedeq * 1;
	margin-left: ~"@{offset}px";
}

.offsetfluid(@x) {
	@offset: (100/@numcols)*@x + @marginfluideq * 1;
	margin-left: ~"@{offset}%";
}


/* --- Example usage --- */
#gridSystem .container {
	width: 480px;
	margin-bottom: @baseline;
	.gridfixed();
	
	div {
		background: #EEE;
	}
	
	&:first-of-type {
		div {
			.spanfixed(1);
		}
	}
	
	&:nth-of-type(2n) {
		div {
			.spanfixed(4);
		}
	}
	
	&:nth-of-type(3n) {
		div {
			.spanfixed(5);
			
			&:last-child {
				.offsetfixed(1);
			}
		}
	}
	
	&:nth-of-type(5n) {
		div {
			.spanfixed(8);
		}
	}
		
}

@media (min-width: 720px) {
	@numcols: 12;
	@pagewidth: 720;
	
	#gridSystem .container {
		width: 720px;
				
		div {
			background: #EEE;
		}
		
		&:first-of-type {
			div {
				.spanfixed(4);
			}
		}
		
		&:nth-of-type(2n) {
			div {
				.spanfixed(4);
			}
		}
		
		&:nth-of-type(3n) {
			div {
				.spanfixed(5);
				
				&:last-child {
					.offsetfixed(1);
				}
			}
		}
		
		&:nth-of-type(5n) {
			div {
				.spanfixed(8);
			}
		}
			
	}

}