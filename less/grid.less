/*====================================================================
    grid.css
======================================================================

    @name           Grid mixins
    @author         Gavyn McKenzie
    @copyright      Gavyn McKenzie
    @description    Grid mixins

======================================================================
    Contents
======================================================================

    - Grid

/*====================================================================
    Grid
======================================================================*/

@gutter :1em;

.grid-wrap {
    margin-left: -@gutter;
    overflow: hidden;
    clear: both;
}

.grid-col(@span,@numcols) {
    float: left;
    padding-left: @gutter;
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
    width: percentage(@span/@numcols);
}

//Basic grid
.grid-basic div {
    .grid-col(1,3);
}

//Nested grid
.grid-nested div:not(.grid-wrap) {
    .grid-col(1,2);
}

//Basic responsive grid, also using on blocked grid
.grid-basic-responsive>div {
    .grid-col(1,1);
}

//Overlay new grid styles in your media query
@media (min-width: 30em) {
    .grid-basic-responsive>div {
        .grid-col(1,2);

        &:last-child {
            .grid-col(1,1);
        }
    }
}

//And for even wider screens...
@media (min-width: 50em) {
    .grid-basic-responsive>div {
        .grid-col(1,3);
        
        &:last-child {
            .grid-col(1,3);
        }       
    }
}

//Blocked grid
.blocked {
    padding: @gutter;
    background: #F2F2F2;
    margin-bottom: @gutter;
}